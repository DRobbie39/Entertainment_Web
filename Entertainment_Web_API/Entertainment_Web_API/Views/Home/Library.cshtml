@model BackEnd.Models.PlaylistViewModel

@{
    ViewData["Title"] = "Library";
    Layout = "~/Views/Shared/_LayoutAccount.cshtml";
}

<div style="margin-top:15px">
    <div class="col-sm-12">
        <div class="bg-secondary rounded h-100 p-4">
            <div class="row" style="background-image:linear-gradient(to bottom,#5c5858,#261515);padding:20px;border-radius:10px;">
                <div class="col-3">
                    <img class="img-fluid w-100" src="/lib/mtp.jpg" alt="" style="width:280px;height:280px;border-radius:10px;">
                </div>
                <div class="col-9" style="margin-top:30px;">
                    <h6>Playlist</h6>
                    <h2 style="font-size:56px;font-weight:700">My playlist(s)</h2>
                    <h6 style="color:#e8d9d9;">
                        chill beats, lofi vibes, new tracks every week...
                    </h6>
                    <h5 style="color:#bebebe;"><i class="fa fa-headphones" aria-hidden="true"></i> 5.255.931 likes 750 songs, over 24 hours</h5>
                    <h5 style="color:#bebebe;"></h5>
                </div>
            </div>
            <div class="d-flex flex-wrap justify-content-start">
                @if (Model.Playlists != null && Model.Playlists.Count > 0)
                {
                    foreach (var playlist in Model.Playlists)
                    {
                        <div class="playlist-container">
                            <a href="@Url.Action("PlaylistDetail", "Home", new { playlistId = playlist.PlaylistId })">
                                <div class="overlay">
                                    <p class="sovideo">@playlist.VideoCount video(s)</p>
                                    <img src="/lib/playlist.png" alt="..." class="playlist-image">
                                </div>
                            </a>
                            <div class="playlist-info">
                                <h5>@playlist.PlaylistName</h5>
                                <div class="dropdown">
                                    <i class="bi bi-three-dots-vertical ellipsis-icon"></i>
                                    <div class="dropdown-content">
                                        <i class="bi bi-pencil-square" style="margin-top:5px;border-radius:15px;" data-toggle="modal" data-target="#editPlaylistModal"></i>
                                        <i class="fa fa-trash" aria-hidden="true" style="margin-top:5px;border-radius:15px;"></i>
                                    </div>
                                </div>
                            </div>

                        </div>
                    }
                }
            </div>
        </div>
    </div>
</div>

<!-- Modal for editing playlist name -->
<div class="modal fade" id="editPlaylistModal" tabindex="-1" role="dialog" aria-labelledby="editPlaylistModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="editPlaylistModalLabel" style="color: black;">Edit Playlist Name</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form id="editPlaylistForm">
                    <div class="form-group">
                        <label for="newPlaylistName">New playlist name</label>
                        <input type="hidden" id="playlistId" name="playlistId" value="@Model.Playlists[0].PlaylistId">
                        <input type="text" class="form-control" id="newPlaylistName" name="newPlaylistName" placeholder="Enter new playlist name">
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-primary" id="savePlaylistNameButton">Save Changes</button>
            </div>
        </div>
    </div>
</div>

<style>
    i.bi-three-dots-vertical {
        cursor: pointer;
    }

    .playlist-info {
        display: flex;
        align-items: center;
        justify-content: center;
    }

    .dropdown {
        position: relative;
        display: inline-block;
        margin-left: 10px; /* Adjust margin as needed */
        display: flex;
    }

    .dropdown-content {
        display: none;
        position: absolute;
        background-color: #f9f9f9;
        min-width: 50px;
        box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
        z-index: 1;
        margin-left: 15px;
        top: -30px;
        border-radius: 15px;
    }

    .show {
        display: block;
    }

    .dropdown-content:hover {
        background-color: #f1f1f1;
    }

    .dropdown-content i {
        display: block;
        padding: 10px;
        text-align: center;
        cursor: pointer;
    }

        .dropdown-content i:hover {
            background-color: #ddd;
        }

    .sovideo {
        position: absolute;
    }

    .mee {
        color: #fff;
        margin-top: 10px;
        margin-left: 20px;
    }

    h5 {
        text-align: center;
    }

    .playlist-container {
        position: relative;
        width: 12rem;
        padding: 10px;
        margin: 5px;
    }

    .overlay {
        position: relative;
    }

    .sovideo {
        position: absolute;
        bottom: 10px;
        right: 10px;
        background-color: rgba(0, 0, 0, 0.76);
        color: white;
        padding: 5px;
        border-radius: 3px;
    }

    .playlist-image {
        width: 100%;
        height: auto;
    }
</style>

<script>
    const kicks = document.querySelectorAll('.ellipsis-icon');
    kicks.forEach(kick => {
        kick.addEventListener('click', () => {
            const dropdownContent = kick.nextElementSibling;

            if (dropdownContent) {
                dropdownContent.classList.toggle('show');
            }
        });
    });
</script>

<!-- Thêm jQuery -->
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/2.11.6/umd/popper.min.js"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>

<!--Nút xử lý sự kiện đóng/mở modal-->
<script>
    //Xử lý sự kiện mở modal
    $(document).ready(function () {
        $("#editPlaylistModal").on('show.bs.modal', function () {
            $("#editPlaylistModal").modal('show');
        });
    });

    //Xử lý sự kiện đóng modal
    $(document).ready(function () {
        $("#editPlaylistModal").on('hide.bs.modal', function () {
            $("#editPlaylistModal").modal('hide');
        });
    });
</script>

<!--Nút sửa ds phát-->
<script>
    $(document).ready(function () {
        // Khi người dùng nhấn nút "Add new playlist"
        $('#savePlaylistNameButton').click(function () {
            var playlistId = $('#playlistId').val();
            var newPlaylistName = $('#newPlaylistName').val();

            $.ajax({
                url: '/Playlist/EditPlaylist',
                type: 'PUT',
                data: {
                    playlistId: playlistId,
                    playlistName: newPlaylistName
                },
                success: function (response) {
                    if (response.success) {
                        alert('Playlist edit successfully!');
                    } else {
                        alert('Edit playlist failed!');
                    }
                }
            });
        });
    });
</script>
